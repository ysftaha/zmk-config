/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/led/led.h>

/*
 * Temporarily here because nice nano v2 spi is not defined on ZMk Yet
 * Source: https://github.com/zmkfirmware/zmk/blob/main/app/boards/shields/reviung41/boards/nice_nano.overlay
 * GitHub Issue: https://github.com/zmkfirmware/zmk/issues/885
 */

&spi1 {
   compatible = "nordic,nrf-spim";
   status = "okay";
   mosi-pin = <6>;
   // Unused pins, needed for SPI definition, but not used by the ws2812 driver itself.
   sck-pin = <5>;
   miso-pin = <7>;

   led_strip: ws2812@0 {
      compatible = "worldsemi,ws2812-spi";
      label = "WS2812";

      /* SPI */
      reg = <0>; /* ignored, but necessary for SPI bindings */
      spi-max-frequency = <4000000>;

		/* WS2812 */
		chain-length = <6>; /* There are per-key RGB, but the first 6 are underglow */
		spi-one-frame = <0x70>;
		spi-zero-frame = <0x40>;

		color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;

   };
};

/ {
   chosen {
      zmk,underglow = &led_strip;
   };
};


/*
 * Above Temporarily here because nice nano v2 spi is not defined on ZMk Yet
 * Source: https://github.com/zmkfirmware/zmk/blob/main/app/boards/shields/reviung41/boards/nice_nano.overlay
 * GitHub Issue: https://github.com/zmkfirmware/zmk/issues/885
 */

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  ESC/GUI |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | TAB |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ENT  |
//                    | CTRL | LWR | SPC |   | SPC | RSE  | ALT |
                        bindings = <
   &mt LGUI ESC   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp TAB &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RET
                  &kp LCTRL &mo 1 &kp SPACE   &kp SPACE &mo 2 &kp RALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | DEL |
// | CAPS |     |     |     |     |BTCLR|   | LFT | DWN |  UP | RGT |     |      |
// | SHFT | BT0 | BT1 | BT2 | BT3 |BTNEXT|   |RGBto|RGBef|RGB+ |RGB-    |      |PSCRN|
//                    | CTRL |     | SPC |   | SPC |     | ALT |
                        bindings = <
   &kp ESC    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp DEL
   &kp CAPS &trans   &trans  &trans   &trans    &bt BT_CLR   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
   &kp LSHFT   &bt BT_SEL 0  &bt BT_SEL 1 &bt BT_SEL 2  &bt BT_SEL 3   &bt BT_NXT    &rgb_ug RGB_TOG     &rgb_ug RGB_EFF     &rgb_ug RGB_BRI     &rgb_ug RGB_BRD &trans &kp PSCRN
                          &kp LCTRL     &trans       &kp SPACE      &kp SPACE  &trans   &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  ` |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | ~  |     |     |     |     |     |    | LFT | DWN |  UP | RGT |  [  |  ]  |
// | SHFT |     |     |     |     |     |   |  -  |  _  |  +  |  =  |  {  |  }  |
//                    | CTRL |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp GRAVE  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &kp TILDE &trans   &trans  &trans   &trans   &trans      &kp LEFT     &kp DOWN  &kp UP  &kp RIGHT  &kp LBKT    &kp RBKT
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp MINUS &kp UNDER &kp PLUS  &kp EQUAL  &kp LBRC &kp RBRC  
                    	     &kp LCTRL &trans    &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };
        };
};
